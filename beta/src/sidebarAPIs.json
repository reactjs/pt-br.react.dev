{
  "title": "API Reference",
  "heading": true,
  "path": "/apis",
  "routes": [
    {
      "heading": true,
      "path": "",
      "routes": [
        {
          "title": "react: Hooks",
          "path": "/apis/react",
          "routes": [
            {
              "title": "useCallback",
              "path": "/apis/react/useCallback"
            },
            {
              "title": "useContext",
              "path": "/apis/react/useContext"
            },
            {
              "title": "useDebugValue",
              "path": "/apis/react/useDebugValue"
            },
            {
              "title": "useDeferredValue",
              "path": "/apis/react/useDeferredValue"
            },
            {
              "title": "useEffect",
              "path": "/apis/react/useEffect"
            },
            {
              "title": "useId",
              "path": "/apis/react/useId"
            },
            {
              "title": "useImperativeHandle",
              "path": "/apis/react/useImperativeHandle"
            },
            {
              "title": "useInsertionEffect",
              "path": "/apis/react/useInsertionEffect",
              "wip": true
            },
            {
              "title": "useLayoutEffect",
              "path": "/apis/react/useLayoutEffect",
              "wip": true
            },
            {
              "title": "useMemo",
              "path": "/apis/react/useMemo"
            },
            {
              "title": "useReducer",
              "path": "/apis/react/useReducer"
            },
            {
              "title": "useRef",
              "path": "/apis/react/useRef"
            },
            {
              "title": "useState",
              "path": "/apis/react/useState"
            },
            {
              "title": "useSyncExternalStore",
              "path": "/apis/react/useSyncExternalStore",
              "wip": true
            },
            {
              "title": "useTransition",
              "path": "/apis/react/useTransition",
              "wip": true
            }
          ]
        },
        {
          "title": "react: Other APIs",
          "path": "/apis/react/other",
          "routes": [
            {
              "title": "<Fragment> (<>)",
              "path": "/apis/react/Fragment"
            },
            {
              "title": "<StrictMode>",
              "path": "/apis/react/StrictMode",
              "wip": true
            },
            {
              "title": "<Suspense>",
              "path": "/apis/react/Suspense"
            },
            {
              "title": "createContext",
              "path": "/apis/react/createContext"
            },
            {
              "title": "forwardRef",
              "path": "/apis/react/forwardRef"
            },
            {
              "title": "lazy",
              "path": "/apis/react/lazy"
            },
            {
              "title": "memo",
              "path": "/apis/react/memo"
            },
            {
              "title": "startTransition",
              "path": "/apis/react/startTransition",
              "wip": true
            }
          ]
        },
        {
          "title": "react-dom",
          "path": "/apis/react-dom",
          "routes": [
            {
              "title": "createPortal",
              "path": "/apis/react-dom/createPortal",
              "wip": true
            },
            {
              "title": "flushSync",
              "path": "/apis/react-dom/flushSync"
            },
            {
              "title": "findDOMNode",
              "path": "/apis/react-dom/findDOMNode",
              "wip": true
            },
            {
              "title": "hydrate",
              "path": "/apis/react-dom/hydrate"
            },
            {
              "title": "render",
              "path": "/apis/react-dom/render"
            },
            {
              "title": "unmountComponentAtNode",
              "path": "/apis/react-dom/unmountComponentAtNode",
              "wip": true
            }
          ]
        },
        {
          "title": "react-dom\/client",
          "path": "/apis/react-dom/client",
          "routes": [
            {
              "title": "createRoot",
              "path": "/apis/react-dom/client/createRoot"
            },
            {
              "title": "hydrateRoot",
              "path": "/apis/react-dom/client/hydrateRoot"
            }
          ]
        },
        {
          "title": "react-dom\/server",
          "path": "/apis/react-dom/server",
          "routes": [
            {
              "title": "renderToNodeStream",
              "path": "/apis/react-dom/server/renderToNodeStream",
              "wip": true
            },
            {
              "title": "renderToPipeableStream",
              "path": "/apis/react-dom/server/renderToPipeableStream",
              "wip": true
            },
            {
              "title": "renderToReadableStream",
              "path": "/apis/react-dom/server/renderToReadableStream",
              "wip": true
            },
            {
              "title": "renderToStaticMarkup",
              "path": "/apis/react-dom/server/renderToStaticMarkup",
              "wip": true
            },
            {
              "title": "renderToStaticNodeStream",
              "path": "/apis/react-dom/server/renderToStaticNodeStream",
              "wip": true
            },
            {
              "title": "renderToString",
              "path": "/apis/react-dom/server/renderToString",
              "wip": true
            }
          ]
        },
        {
          "title": "react: Legacy APIs",
          "path": "/apis/react/legacy",
          "hasSeparator": true,
          "routes": [
            {
              "title": "Children",
              "path": "/apis/react/Children"
            },
            {
              "title": "cloneElement",
              "path": "/apis/react/cloneElement"
            },
            {
              "title": "Component",
              "path": "/apis/react/Component"
            },
            {
              "title": "createElement",
              "path": "/apis/react/createElement"
            },
            {
              "title": "createFactory",
              "path": "/apis/react/createFactory"
            },
            {
              "title": "createRef",
              "path": "/apis/react/createRef"
            },
            {
              "title": "isValidElement",
              "path": "/apis/react/isValidElement"
            },
            {
              "title": "PureComponent",
              "path": "/apis/react/PureComponent"
            }
          ]
        }
      ]
    }
  ]
}
